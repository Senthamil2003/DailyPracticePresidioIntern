// <auto-generated />
using System;
using AtmApplicationApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtmApplicationApp.Migrations
{
    [DbContext(typeof(AtmContext))]
    [Migration("20240711114149_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AtmApplicationApp.Models.Account", b =>
                {
                    b.Property<long>("AccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AccountNumber"), 1L, 1);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountNumber = 12345678901L,
                            Balance = 52000.0,
                            UserId = 101
                        },
                        new
                        {
                            AccountNumber = 9876543210L,
                            Balance = 98000.0,
                            UserId = 102
                        },
                        new
                        {
                            AccountNumber = 98765432198L,
                            Balance = 78000.0,
                            UserId = 103
                        },
                        new
                        {
                            AccountNumber = 23456987623L,
                            Balance = 91000.0,
                            UserId = 104
                        },
                        new
                        {
                            AccountNumber = 76575687653L,
                            Balance = 88000.0,
                            UserId = 105
                        });
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Card", b =>
                {
                    b.Property<long>("CardNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CardNumber"), 1L, 1);

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("PIN")
                        .HasColumnType("int");

                    b.HasKey("CardNumber");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            CardNumber = 1234569791882006L,
                            AccountNumber = 12345678901L,
                            PIN = 4466
                        },
                        new
                        {
                            CardNumber = 1234569791882007L,
                            AccountNumber = 9876543210L,
                            PIN = 5782
                        },
                        new
                        {
                            CardNumber = 1234569791882008L,
                            AccountNumber = 98765432198L,
                            PIN = 1289
                        },
                        new
                        {
                            CardNumber = 1234569791882009L,
                            AccountNumber = 23456987623L,
                            PIN = 2522
                        },
                        new
                        {
                            CardNumber = 1234569791882001L,
                            AccountNumber = 76575687653L,
                            PIN = 7319
                        });
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Customer", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            UserId = 101,
                            Email = "hogn@gmail.com",
                            Name = "John",
                            Phone = "1234567890"
                        },
                        new
                        {
                            UserId = 102,
                            Email = "ram@gmail.com",
                            Name = "Ram",
                            Phone = "1234567890"
                        },
                        new
                        {
                            UserId = 103,
                            Email = "bimu@gmail.com",
                            Name = "Bimu",
                            Phone = "1234567890"
                        },
                        new
                        {
                            UserId = 104,
                            Email = "himu@gmail.com",
                            Name = "Himu",
                            Phone = "1234567890"
                        },
                        new
                        {
                            UserId = 105,
                            Email = "somu@gmail.com",
                            Name = "Somu",
                            Phone = "1234567890"
                        });
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionID"), 1L, 1);

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<double>("TransactionAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionID");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Account", b =>
                {
                    b.HasOne("AtmApplicationApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Card", b =>
                {
                    b.HasOne("AtmApplicationApp.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("AtmApplicationApp.Models.Transaction", b =>
                {
                    b.HasOne("AtmApplicationApp.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
